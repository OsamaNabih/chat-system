version: "2"
services:
  mysql:
    container_name: mysql
    image: mysql:8
    environment:
    - MYSQL_ROOT_PASSWORD=password
    - MYSQL_PASSWORD=password
    - MYSQL_DATABASE=mysql-db
    ports:
    - "3306:3306"
    networks:
      static-network:
        ipv4_address: 172.20.128.1
    volumes:
      - mysql-data:/var/lib/mysql
    security_opt:
      - seccomp:unconfined

  elasticsearch:
    container_name: es-container
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.1
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    networks:
      static-network:
        ipv4_address: 172.20.128.2
    ports:
      - 9200:9200
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  redis:
    container_name: redis
    image: 'redis:6.0-alpine'
    command: redis-server
    networks:
      static-network:
        ipv4_address: 172.20.128.3
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    
  

  server:
    container_name: rails_server
    build: .
    command: bash -c "rm -f tmp/pids/server.pid && rails s -p 3000 -b '0.0.0.0'"
    networks:
      static-network:
        ipv4_address: 172.20.128.4
    ports:
      - '3000:3000'
    volumes:
      - .:/chat-system-api
    depends_on:
      - 'mysql'
      - 'redis'
      - 'elasticsearch'
    #environment:
      # - REDIS_URL_SIDEKIQ=redis://redis:6379/0
      # - ELASTICSEARCH_URL=http://172.20.128.2:9200
    # env_file:
    #   - '.env'

  sidekiq:
    container_name: sidekiq
    depends_on:
      - 'mysql'
      - 'redis'
    build: .
    command: sidekiq -C config/sidekiq.yml
    volumes:
      - .:/chat-system-api
    networks:
      static-network:
        ipv4_address: 172.20.128.5
    #environment:
      #- '.env'
      # - REDIS_URL_SIDEKIQ=redis://redis:6379/0
      # - ELASTICSEARCH_URL=http://172.20.128.2:9200
  
  whenever:
    container_name: cron
    depends_on:
      - 'server'
      - 'mysql'
    build: .
    command: > 
            bash -c "service cron start && 
            touch log/cron.log &&
            whenever --clear-crontab && 
            whenever --update-crontab &&
            tail -f log/cron.log"
    networks:
      static-network:
        ipv4_address: 172.20.128.6
    volumes:
      - .:/chat-system-api


networks:
  static-network:
    ipam:
      config:
      - subnet: 172.20.0.0/16
        #docker-compose v3+ do not use ip_range
        ip_range: 172.28.5.0/24

  # kibana:
  #   container_name: kb-container
  #   image: docker.elastic.co/kibana/kibana:7.17.1
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://es-container:9200
  #   networks:
  #     #- es-net
  #       static-network:
  #         ipv4_address: 172.20.128.5
  #   depends_on:
  #     - elasticsearch
  #   ports:
  #     - 5601:5601
  
volumes:
  mysql-data:
  elasticsearch-data:
  redis-data:
  .:
